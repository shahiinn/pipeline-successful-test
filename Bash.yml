resources: 

  - name:       Git
    type:       GitRepo
    configuration:
      gitProvider:  shahin_git
      path:         shahiinn/pipeline-successful-test  

pipelines:
  - name: pipe1
    configuration:
      environmentVariables:
        readOnly:
          SKIP_HELM: NO
          RODUCT_RESOLVE_REPO: xray-dev
          PRODUCT_DEPLOY_REPO: xray-dev
          PRODUCT_VERSION: 3.x-feature-INST-1264-33
          PRODUCT_NAME: xray
          BUILD_CHART: CUSTOM
          SKIP_HELM_BUILD: NO
          INSTALLER_COMMON_REPO: feature-INST-1267-local
          INSTALLER_COMMON_VERSION: 1.*
          BUILD_NAME_SUFFIX: feature-INST-1267-devbranch
          BUILD_PARAMS_SRC: src/products/build-params.json
          BUILD_NUMBER: 33
          HELM_VERSION: v3.2.4
          TEST_IMAGE: docker.io/rimusz/gke-charts-ci
          TEST_IMAGE_TAG: v0.0.3
          KUBEVAL_VERSION: 0.15.0
          CHART_TESTING_ARGS: ""
          DOCKERREPO: docker.jfrog.io
          GCLOUD_GKE_CLUSTER: ${int_charts_testing_cluster_cluster}
          GCLOUD_SERVICE_KEY_CHARTS_CI: ${int_charts_testing_cluster_gcp_service_key}
          AWS_ACCESS_KEY_ID: ${int_charts_testing_cluster_v16_accessKeyId}
          AWS_SECRET_ACCESS_KEY: ${int_charts_testing_cluster_v16_secretAccessKey}
          EKS_KUBECONFIG: ${int_charts_testing_cluster_eks_v16_config}
          CHART_TESTING_IMAGE: docker.io/chukka/eks-charts-ci
          CHART_TESTING_TAG: v3.0.1
          REPO_ROOT: ${res_jfrog_installercommon_bitbucket_resourcePath}/src/products/helm-charts
    steps:
    - name: try1
      type: Bash            
      configuration:
        affinityGroup: hello_docker
        inputResources:
            - name: Git
      execution:
          onExecute:
            - echo "hey, I am running"
            - printenv | grep -E "PRODUCT_RESOLVE_REPO|PRODUCT_DEPLOY_REPO|PRODUCT_VERSION|PRODUCT_NAME|BUILD_CHART|SKIP_HELM_BUILD|INSTALLER_COMMON_REPO|INSTALLER_COMMON_VERSION|BUILD_NAME_SUFFIX|BUILD_PARAMS_SRC|BUILD_NUMBER|HELM_VERSION|TEST_IMAGE|TEST_IMAGE_TAG|KUBEVAL_VERSION|DOCKERREPO|CHART_TESTING_IMAGE|CHART_TESTING_TAG|REPO_ROOT" | grep -E -v "step_configuration|current_cmd" > step_env_file
            - add_pipeline_files step_env_file pipeline_env_var
            - cat steplet.env
            - cat step_env_file
          onSuccess:
            - 'update_commit_status_custom Git --context "${step_name}" --message "test1 \n URL : test url" --url "https://google.com"'
            - 'update_commit_status_custom Git --context "${step_name} Image scan result:" --message "\t\t\t ===>> " --url "https://google.com/test"'
          onFailure:
            - echo "uh oh, something went wrong."
          onComplete: #always
            - echo "Cleaning up some stuff."
          onCancel:
            - echo "Someone cancelled the job......."


    - name: try2
      type: Bash            
      configuration:
        affinityGroup: hello_docker
        inputSteps:
            - name: try1
        inputResources:
            - name: Git
      execution:
          onExecute:
            - |
              if [[ "${SKIP_HELM}" == "YES" || "${SKIP_HELM}" == "yes" ]]; then
                echo "Helm chart build is disabled. Skipping"
                exit 0
              fi
            - restore_pipeline_files pipeline_env_var envfile
            - cat envfile

            - echo "hey, I am running new"



#    - name: build_image
#      type: DockerBuild
#      configuration:
#        affinityGroup: hello_docker
#        dockerFileLocation: .
#        dockerFileName: Dockerfile
#        dockerImageName: "10.70.30.71:8082/docker-local/pp-centos"
#        dockerImageTag: ${run_number}
#        inputSteps:
#          - name: try1
#        inputResources:
#          - name: Git
#        integrations:
#          - name: MyArtifactory

#    - name: push_image
#      type: DockerPush
#      configuration:
#        affinityGroup: hello_docker
#        targetRepository: "docker-local"
#        inputSteps:
#          - name: build_image
#        integrations:
#          - name: MyArtifactory
